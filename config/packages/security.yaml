security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user_chain:
            chain:
                providers: [ api_key, fos_userbundle ]
        api_key:
            id: App\Security\UserProvider
        fos_userbundle:
            id: fos_user.user_provider.username


    firewalls:
        oauth_token:
            pattern:    ^/oauth/v1/token
            security:   false

        oauth_authorize:
            pattern:    ^/oauth/v1/auth
            form_login:
                provider: fos_userbundle
                check_path: /oauth/v1/auth_login_check
                login_path: /oauth/v1/auth_login
                use_referer: true
            anonymous: true
        api:
            pattern:    ^/api
            fos_oauth:  true
            stateless:  true
            anonymous:  true
            simple_preauth:
                authenticator: App\Security\ApiKeyAuthenticator
            provider: api_key
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
            logout:       true
            anonymous:    true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/admin/, role: ROLE_ADMIN }
